# IBM WatsonX Orchestrate Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    docker.io \
    && rm -rf /var/lib/apt/lists/*

# Install IBM WatsonX Orchestrate
RUN pip install --no-cache-dir ibm-watsonx-orchestrate

# Copy WatsonX code
COPY backend/ibm_watson/ .

# Create data directory
RUN mkdir -p data

# Set environment variables
ENV PYTHONPATH=/app
ENV WO_DEVELOPER_EDITION_SOURCE=orchestrate

EXPOSE 3000 4321

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Wait for environment file\n\
while [ ! -f ../.env ]; do\n\
    echo "Waiting for .env file..."\n\
    sleep 5\n\
done\n\
\n\
# Activate environment\n\
orchestrate env activate local\n\
\n\
# Start server\n\
echo "Starting WatsonX Orchestrate server..."\n\
orchestrate server start -e ../.env &\n\
\n\
# Wait for server to start\n\
sleep 30\n\
\n\
# Deploy tools\n\
echo "Deploying AI tools..."\n\
orchestrate tools import -k python -f tools/project_analyzer.py || true\n\
orchestrate tools import -k python -f tools/impact_calculator.py || true\n\
orchestrate tools import -k python -f tools/risk_assessor.py || true\n\
orchestrate tools import -k python -f tools/budget_optimizer.py || true\n\
\n\
# Deploy agents\n\
echo "Deploying AI agents..."\n\
orchestrate agents import -f agents/csr_matching_agent.yaml || true\n\
orchestrate agents import -f agents/project_evaluation_agent.yaml || true\n\
orchestrate agents import -f agents/decision_support_agent.yaml || true\n\
orchestrate agents import -f agents/impact_assessment_agent.yaml || true\n\
\n\
# Start chat interface\n\
echo "Starting chat interface..."\n\
orchestrate chat start\n\
' > start.sh && chmod +x start.sh

CMD ["./start.sh"]